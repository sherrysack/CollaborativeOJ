{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lijun app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { routing } from './app.routes';\nimport { FormsModule} from '@angular/forms';\nimport { HttpModule} from '@angular/http';\n\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { DataService} from './services/data.service';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    routing\n  ],\n  providers: [{\n    provide: 'data',\n    useClass: DataService\n  }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {RouterModule, Routes} from '@angular/router';\nimport {ProblemListComponent} from './components/problem-list/problem-list.component';\nimport {ProblemDetailComponent} from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'problems',\n    pathMatch: 'full'\n  },\n  {\n    path: 'problems',\n    component: ProblemListComponent\n  },\n  {\n    path: 'problems/:id',\n    component: ProblemDetailComponent\n  },\n  {\n    path: '**',\n    redirectTo: 'problems',\n  }\n]\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">ProblemName</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n             name=\\\"problemName\\\" required placeholder=\\\"Enter Problem Name\\\"\\n      [(ngModel)]=\\\"newProblem.name\\\"/>\\n\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">ProblemDescription</label>\\n      <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n             name=\\\"problemDesc\\\" required placeholder=\\\"Enter Problem Description\\\"\\n             [(ngModel)]=\\\"newProblem.desc\\\">\\n      </textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\"\\n                name=\\\"difficulty\\\" [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option value=\\\"default\\\" disabled selected>Select Difficulty</option>\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\"> {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class = \\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type = \\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Problem} from \"../../models/problem.model\";\nimport {PROBLEMS} from \"../../mock-problems\";\n\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'default'\n});\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  public difficulties = ['Easy','Medium','Hard', 'Excellent'];\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n\n\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n  }\n  addProblem(): void {\n    this.data.addProblem(this.newProblem).catch(error => console.log(error));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class = \\\"container\\\" *ngIf='problem'>\\n  <div class = \\\"col-xs-12 col-md-8\\\">\\n    <div>\\n      <h2>\\n        {{problem.id}}.{{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br />\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem} from '../../models/problem.model';\nimport { ActivatedRoute, Params} from '@angular/router';\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.data.getProblem(+params[\"id\"]).then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n  mid-width:65px;\\n  margin-right:10px;\\n}\\n.label.difficulty {\\n  badding-top:0.6em;\\n  color: #fbfdfa;\\n  font-size:12px;\\n}\\n.title {\\n  font-size:1.3em;\\n}\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class = \\\"list-group\\\">\\n    <a class = \\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-'+problem.difficulty.toLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong class = 'title'>{{problem.id}}. {{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  constructor(@Inject('data') private data) { }\n\n  ngOnInit() {\n    this.getProblems();\n  }\n  getProblems(): void {\n    this.subscriptionProblems = this.data.getProblems()\n      .subscribe(problems => this.problems = problems);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport {PROBLEMS} from '../mock-problems';\nimport {Http, Response, Headers} from \"@angular/http\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  //problems: Problem[]= PROBLEMS;any\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n  private handleError(error: any): Promise<any>{\n    console.error('An error occured', error);\n    return Promise.reject(error.body || error);\n  }\n\n  constructor(private http: Http) {\n  };\n\n  getProblems(): Observable<Problem[]> {\n    this.http.get(\"api/v1/problems\")\n      .toPromise()\n      .then((res: Response) => {\n        this.problemsSource.next(res.json());\n      })\n      .catch(this.handleError);\n\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    //return PROBLEMS.find((problem) => problem.id === id);\n    return this.http.get(`api/v1/prblems/$(id)`)\n      .toPromise().then((res: Response) => res.json())\n      .catch(this.handleError);\n  }\n\n  addProblem(problem): Promise<Problem> {\n    const headers = new Headers({'content-type': 'application/json'});\n    return this.http.post('/api/v1/problems', problem)\n      .toPromise().then((res: Response) => {\n        this.getProblems();\n        //if succeed in adding problem, you should return the\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}